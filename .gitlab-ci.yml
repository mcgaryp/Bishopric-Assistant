# From an article
# https://medium.com/version-1/flutter-continuous-integration-using-gitlab-80f3d896704a
image: mobiledevops/flutter-sdk-image:latest

# variables:

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .pub-cache/global_packages

stages:
  - test # All Jobs related to testing, Unit Tests and Widget Tests
  - build # All Jobs related to building the app for web, iOS, and Android
  - deploy # All Jobs related to deploying the app

flutter_model_test:
  stage: test
  before_script:
    - cd models
  script:
    - flutter test test/test.dart
  tags:
    - shared
  only:
    - merge_requests

# TODO: How is .env file included without disclosing the secrets
#flutter_app_test:
#  stage: test
#  before_script:
#    - cd bishop_assistant_web_test_app
#    - flutter upgrade
#  script:
#    - flutter test test/tests.dart
#  tags:
#    - shared
#  only:
#    - merge_requests

flutter_build_web:
 stage: build
 before_script:
   - flutter upgrade
   - cd bishop_assistant_web_test_app
   - echo '$DEV_ENV' >dev.env
   - echo '$BETA_ENV' >beta.env
   - echo '$PROD_ENV' >prod.env
 script:
   - flutter build web
 artifacts:
   paths:
     - build/web/
 tags:
   - shared

# Website that describes how to set up build for flutter
# https://medium.com/kinandcartacreated/setup-a-flutter-ci-cd-with-gitlab-ci-part-3-8e67c91c6da7
# flutter_build_android: #Job name
#   stage: build # kind of job
#   before_script:
#     - flutter packages get
#     - flutter clean
#   script:
#      - flutter build apk
#   artifacts:
#     paths:
#       - build/app/outputs/apk/release/app-release.apk
#   tags:
#     - flutter

# flutter_build_ios:
#   stage: build
#   before_script:
#     - flutter packages get
#     - flutter clean
#   script:
#     - flutter build ios
#     - cd ios
#     - xcodebuild clean archive -workspace Runner.xcworkspace -scheme Runner -archivePath RunnerArchive
#     - xcodebuild -exportArchive -archivePath RunnerArchive.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ./build
#   artifacts:
#     paths:
#       - ios/build/Runner.ipa
#   tags:
#     - flutter

flutter_deploy_web:
 stage: deploy
 before_script:
   - npm install -g firebase-tools
   - cd bishop_assistant_web_test_app
   - echo '$DEV_ENV' >dev.env
   - echo '$BETA_ENV' >beta.env
   - echo '$PROD_ENV' >prod.env
 script:
   - firebase login
   - firebase use beta
   - firebase hosting:channel:deploy cicd-test
 artifacts:
   paths:
     - build/web/
 only:
   - master

# Article that describes the process of deployment with App Center
# https://medium.com/kinandcartacreated/setup-a-flutter-ci-cd-with-gitlab-ci-part-4-e517c4c11bd8
# deploy_ios:
#   stage: deploy
#   dependencies:
#     - flutter_build_ios
#   script:
#     - appcenter login --token $APPCENTER_API_TOKEN
#     - appcenter distribute release -f ios/build/Runner.ipa -g Collaborators --app [username]/[project]
#   tags:
#     - flutter

# deploy_android:
#   stage: deploy
#   dependencies:
#     - flutter_build_android
#   script:
#     - appcenter login --token $APPCENTER_API_TOKEN
#     - appcenter distribute release -f build/app/outputs/apk/release/app-release.apk -g Collaborators -app [username]/[project]
#   tags:
#     - flutter

# Article that describes the process of deployment with Fastlane
# https://medium.com/kinandcartacreated/setup-a-flutter-ci-cd-with-gitlab-ci-part-5-26ab03f3190
# TODO: Compare Fastlane with AppCenter
